language: go

services:
  - docker

sudo: false

os:
  - linux

env:
  global:
    - GO111MODULE=on
    - PRODUCT=copybird

go:
  - 1.12.x
dist: xenial

before_install:
  - go get golang.org/x/tools/cmd/cover
  - go get github.com/mattn/goveralls

install:
  # Core testing install
  - docker-compose build
  - docker-compose up -d

script:
  - go test -v -covermode=count -coverprofile=coverage.out ./...
  - $HOME/gopath/bin/goveralls -coverprofile=coverage.out -service=travis-ci -repotoken $COVERALLS_TOKEN
  - GOOS=linux GOARCH=${TRAVIS_CPU_ARCH} go build -o bin/${PRODUCT}-${TRAVIS_TAG}
  - GOOS=darwin GOARCH=${TRAVIS_CPU_ARCH} go build -o bin/${PRODUCT}-${TRAVIS_TAG}_osx
  - docker build -t copybird/${PRODUCT}:latest .

before_deploy:
  - docker tag copybird/${PRODUCT}:latest copybird/${PRODUCT}:${TRAVIS_TAG} .
  # - tar czvf build/${PRODUCT}-${TRAVIS_TAG}.linux-${TRAVIS_CPU_ARCH}.tar.gz bin/${PRODUCT}
  # - tar czvf build/${PRODUCT}-${TRAVIS_TAG}.osx-${TRAVIS_CPU_ARCH}.tar.gz bin/${PRODUCT}_osx

deploy:
  - provider: releases
    api_key: ${GITHUB_OAUTH_TOKEN}
    file:
      - bin/${PRODUCT}-${TRAVIS_TAG}
      - bin/${PRODUCT}-${TRAVIS_TAG}_osx
      # - build/${PRODUCT}-${TRAVIS_TAG}.linux-${TRAVIS_CPU_ARCH}.tar.gz
      # - build/${PRODUCT}-${TRAVIS_TAG}.osx-${TRAVIS_CPU_ARCH}.tar.gz
    skip_cleanup: true
    on:
      tags: true
  - provider: script
    script: bash docker_push.sh ${TRAVIS_TAG}
    skip_cleanup: true
    on:
      tags: true